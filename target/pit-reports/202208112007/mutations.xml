<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/AnotherApp::m</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>23</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/AnotherApp::m</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>20</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/AnotherApp::p</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AnotherApp.java</sourceFile><mutatedClass>anonymous.AnotherApp</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/AnotherApp::p</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>anonymous.AppTest.t1[1](anonymous.AppTest)|anonymous.AppTest.t1[0](anonymous.AppTest)|anonymous.AnotherAppTest.t1(anonymous.AnotherAppTest)</succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>anonymous.AppTest.t1[0](anonymous.AppTest)|anonymous.AnotherAppTest.t1(anonymous.AnotherAppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests>anonymous.AppTest.t1[1](anonymous.AppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>2</block></blocks><killingTests>anonymous.AppTest.t1[1](anonymous.AppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>anonymous.AppTest.t1[1](anonymous.AppTest)|anonymous.AppTest.t1[0](anonymous.AppTest)|anonymous.AnotherAppTest.t1(anonymous.AnotherAppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests>anonymous.AppTest.t1[0](anonymous.AppTest)|anonymous.AnotherAppTest.t1(anonymous.AnotherAppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/App::m</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>m</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>23</index></indexes><blocks><block>2</block></blocks><killingTests>anonymous.AppTest.t1[1](anonymous.AppTest)</killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/App::m</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>20</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/App::p</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>anonymous.App</mutatedClass><mutatedMethod>p</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><timeoutTests></timeoutTests><runErrorTests></runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/App::p</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>SimpleCalculator.java</sourceFile><mutatedClass>anonymous.SimpleCalculator</mutatedClass><mutatedMethod>sum</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>anonymous.TestsForSimpleCalculator.testSum(anonymous.TestsForSimpleCalculator)|anonymous.TestsForSimpleCalculator.testSumWithNegativeNumber(anonymous.TestsForSimpleCalculator)</killingTests><succeedingTests>anonymous.TestsForSimpleCalculator.pseudoTestSum(anonymous.TestsForSimpleCalculator)</succeedingTests><timeoutTests>anonymous.TestsForSimpleCalculator.timeoutOnMutant(anonymous.TestsForSimpleCalculator)</timeoutTests><runErrorTests>anonymous.TestsForSimpleCalculator.unknownErrorOnMutant(anonymous.TestsForSimpleCalculator)</runErrorTests><memoryErrorTests></memoryErrorTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>SimpleCalculator.java</sourceFile><mutatedClass>anonymous.SimpleCalculator</mutatedClass><mutatedMethod>sum</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>anonymous.TestsForSimpleCalculator.testSum(anonymous.TestsForSimpleCalculator)|anonymous.TestsForSimpleCalculator.testSumWithNegativeNumber(anonymous.TestsForSimpleCalculator)</killingTests><succeedingTests>anonymous.TestsForSimpleCalculator.pseudoTestSum(anonymous.TestsForSimpleCalculator)</succeedingTests><timeoutTests>anonymous.TestsForSimpleCalculator.timeoutOnMutant(anonymous.TestsForSimpleCalculator)</timeoutTests><runErrorTests>anonymous.TestsForSimpleCalculator.unknownErrorOnMutant(anonymous.TestsForSimpleCalculator)</runErrorTests><memoryErrorTests></memoryErrorTests><description>replaced int return with 0 for anonymous/SimpleCalculator::sum</description></mutation>
</mutations>
